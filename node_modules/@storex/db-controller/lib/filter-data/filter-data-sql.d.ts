export interface FilterDataSqlArgs {
    limitResults?: any;
    filterData?: any;
    fields: any;
    fieldDate?: any;
    fromTable: any;
    whereIgnore?: any;
    moreWhere?: any;
    getDB: () => object;
    filterDataValidation?: any;
}
export declare class FilterDataSql {
    query: any;
    filterData: any;
    fields: any;
    fieldDate: any;
    fromTable: any;
    whereIgnore: any;
    moreWhere: any;
    getDB: any;
    filterDataValidation: any;
    constructor(args: FilterDataSqlArgs);
    validFilterData(): any;
    buildQuery(): any;
    buildCountQuery(): string;
    addFields(): this;
    getFields(): any;
    addOrderBy(): this;
    readonly isLimit: boolean;
    getOrderBy(): string;
    addFrom(): this;
    addLimit(): this;
    getLimit(): string;
    addWhere(): this;
    getWhere(moreWhere: string, ignoreFields: any): string;
    fetchFilteredData(): Promise<{}>;
}
export declare function createWhereRange(from: any, to: any, fieldDate: any): string;
export declare function createSqlWhere(where: any, moreWhere: string, ignoreFields: any): string;
export declare function timestampToSecond(time: any): any;
