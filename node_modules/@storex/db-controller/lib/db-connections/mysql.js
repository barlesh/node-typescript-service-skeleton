"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const mysql = require("mysql");
let mysqlConf;
class DemoPool {
    constructor() {
        this.query = (query, func1, callback) => {
            if (typeof func1 === "function") {
                return func1("DB not available right now", []);
            }
            if (typeof callback === "function") {
                return callback("DB not available right now", []);
            }
            return;
        };
    }
}
const demoPool = new DemoPool();
const DBS_POOL = {};
function init(_mysqlConf) {
    mysqlConf = _mysqlConf;
    for (const db of mysqlConf.dbs) {
        Object.defineProperty(DBS_POOL, db, {
            get: () => {
                if (connections[db]) {
                    return connections[db];
                }
                return demoPool;
            }
        });
    }
    connect();
}
exports.init = init;
const connections = {};
function connect() {
    // before connect lets close
    close();
    const { host, user, password } = mysqlConf;
    for (const db of mysqlConf.dbs) {
        connections[db] = mysql.createPool({
            connectionLimit: 15,
            host,
            user,
            password,
            database: db
        });
    }
}
exports.connect = connect;
function close() {
    if (!mysqlConf) {
        throw Error("[MySql::close] the db never init, please init the db before using it");
    }
    for (const db of mysqlConf.dbs) {
        const dbPool = connections[db];
        if (dbPool != undefined) {
            dbPool.end();
            connections[db] = undefined;
        }
    }
}
exports.close = close;
exports.default = DBS_POOL;
