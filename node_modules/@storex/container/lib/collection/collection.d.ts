import { Dispatcher, DispatcherArgs } from "@storex/core";
import { CollectionStatus } from "./collection-status";
import { CollectionMeta } from "./collection-meta";
export declare enum DataGridEvents {
    DataChange = "data-change",
    StateChange = "state-change",
    MetaChange = "meta-change"
}
export interface CollectionArgs extends DispatcherArgs {
    meta: CollectionMeta;
    status: CollectionStatus;
}
export declare class Collection extends Dispatcher {
    meta: CollectionMeta;
    status: CollectionStatus;
    private _itemsDir;
    private _items;
    private _viewItems;
    private _is_items_need_to_render;
    private _is_view_items_need_to_render;
    constructor({ meta, status, events, dependencies }: CollectionArgs);
    addMany(items: any): void;
    add(item: any): void;
    remove(id: any): void;
    update(item: any): void;
    override(items: any): void;
    data: any;
    itemsAsObj: any;
    clean(): void;
    get: (id: any) => any;
    private generateDicItem;
    private _updateItemsFromItemDir;
}
export declare function createCollection({ itemToId }: {
    itemToId: any;
}): Collection;
