export declare class IsEmpty {
    static obj(val: any): boolean;
    static array(val: any): boolean;
    static string(val: any): boolean;
    static number(val: any): boolean;
    static bool(val: any): boolean;
}
export interface IStringifyDataOptions {
    ignoreEmpty?: boolean;
    keyValueSeparate?: string;
    emptyValue?: string;
    separateBetweenKeys?: string;
}
export declare class StringifyDataOptions {
    static defaults: {
        ignoreEmpty: boolean;
        keyValueSeparate: string;
        emptyValue: string;
        separateBetweenKeys: string;
    };
    ignoreEmpty?: boolean;
    keyValueSeparate?: string;
    emptyValue?: string;
    separateBetweenKeys?: string;
    constructor(args?: IStringifyDataOptions);
}
export interface ITranslateDataOptions {
    ignoreEmpty?: boolean;
    emptyValue?: any;
    displayed?: string[];
    ignored?: string[];
    keysMap?: object;
    valsMap?: object;
    computed?: {
        [key: string]: any;
    };
    keysTransform?: (key: any) => string;
}
export declare class DataTranslatorOptions {
    static defaults: {
        ignoreEmpty: boolean;
        emptyValue: any;
        displayed: any;
        ignored: any;
        keysMap: {};
        valsMap: {};
        computed: {};
        keysTransform: (key: any) => any;
    };
    ignoreEmpty?: boolean;
    emptyValue?: any;
    displayed?: string[];
    ignored?: string[];
    keysMap?: object;
    valsMap?: object;
    computed?: object;
    keysTransform?: (key: any) => string;
    constructor(args?: ITranslateDataOptions);
}
export declare class StringifyData {
    private options;
    constructor(options: any);
    obj(o: any): any;
    arrayInShort(a: any): any;
    array(a: any, mapValue?: any): any;
}
export declare class DataTranslator {
    private options;
    constructor(options: DataTranslatorOptions);
    private _translateValue;
    private _translateKey;
    obj(obj: any): {};
    _obj: (obj: any, _translateKey: any, _translateValue: any, options: any) => {};
    createNestedTranslateKey: (options: any) => any;
    createNestedTranslateVal: (options: any) => any;
    array(key: any, a: any, obj: any): any;
    _array(key: any, a: any, obj: any, _translateValue: any): any;
}
export declare function NormalizeKey(key: string): string;
